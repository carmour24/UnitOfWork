package com.opidis.unitofwork.data.jooq

import org.jooq.Query
import org.jooq.conf.ParamType

internal fun replaceNamedSqlParamsWithNumberedParams(sql: String, fieldCount: Int): String {
    var index = 0
    return sql.replace(Regex("(?:\\:(\\d+))")) {
        "\$${(index++ % fieldCount) + 1}"
    }
}

/**
 * Replaces Jooq named params with parameters suitable for use in PostgreSQL via reactive-pg-client.
 *
 * Jooq named parameters create increment parameters not suitable for use with PostgreSQL.
 * Bulk inserts should reuse the same numbered params of the form $1, $2, $n for each row to be inserted.
 * e.g. 'insert into table1 (field1, field2, field3) values ($1, $2, $3) ($1, $2, $3)'
 * rather than what is generated by the Jooq getSql(ParamType.NAMED), e.g.
 * e.g. 'insert into table1 (field1, field2, field3) values (:1, :2, :3) (:4, :5, :6)'
 * Note the continuing increment per parameter in this version.
 *
 * NB: The bulk insert/update [Query] is expected to include the same number of fields for every row to be
 * inserted/updated.
 *
 * @param: fieldCount The count of fields used within the bulk insert/update parameters.
 */
fun Query.getSqlWithNumberedParams(fieldCount: Int) = replaceNamedSqlParamsWithNumberedParams(this.getSQL(ParamType.NAMED), fieldCount)

/*
 * This file is generated by jOOQ.
 */
package com.opidis.ca.generated.pg_catalog.tables;


import com.opidis.ca.generated.pg_catalog.PgCatalog;
import com.opidis.ca.generated.pg_catalog.tables.records.PgShadowRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgShadow extends TableImpl<PgShadowRecord> {

    private static final long serialVersionUID = -1034929920;

    /**
     * The reference instance of <code>pg_catalog.pg_shadow</code>
     */
    public static final PgShadow PG_SHADOW = new PgShadow();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PgShadowRecord> getRecordType() {
        return PgShadowRecord.class;
    }

    /**
     * The column <code>pg_catalog.pg_shadow.usename</code>.
     */
    public final TableField<PgShadowRecord, String> USENAME = createField("usename", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>pg_catalog.pg_shadow.usesysid</code>.
     */
    public final TableField<PgShadowRecord, Long> USESYSID = createField("usesysid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>pg_catalog.pg_shadow.usecreatedb</code>.
     */
    public final TableField<PgShadowRecord, Boolean> USECREATEDB = createField("usecreatedb", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>pg_catalog.pg_shadow.usesuper</code>.
     */
    public final TableField<PgShadowRecord, Boolean> USESUPER = createField("usesuper", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>pg_catalog.pg_shadow.userepl</code>.
     */
    public final TableField<PgShadowRecord, Boolean> USEREPL = createField("userepl", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>pg_catalog.pg_shadow.usebypassrls</code>.
     */
    public final TableField<PgShadowRecord, Boolean> USEBYPASSRLS = createField("usebypassrls", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>pg_catalog.pg_shadow.passwd</code>.
     */
    public final TableField<PgShadowRecord, String> PASSWD = createField("passwd", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<PgShadowRecord, Object> VALUNTIL = createField("valuntil", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"abstime\""), this, "");

    /**
     * The column <code>pg_catalog.pg_shadow.useconfig</code>.
     */
    public final TableField<PgShadowRecord, String[]> USECONFIG = createField("useconfig", org.jooq.impl.SQLDataType.CLOB.getArrayDataType(), this, "");

    /**
     * Create a <code>pg_catalog.pg_shadow</code> table reference
     */
    public PgShadow() {
        this(DSL.name("pg_shadow"), null);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_shadow</code> table reference
     */
    public PgShadow(String alias) {
        this(DSL.name(alias), PG_SHADOW);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_shadow</code> table reference
     */
    public PgShadow(Name alias) {
        this(alias, PG_SHADOW);
    }

    private PgShadow(Name alias, Table<PgShadowRecord> aliased) {
        this(alias, aliased, null);
    }

    private PgShadow(Name alias, Table<PgShadowRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PgShadow(Table<O> child, ForeignKey<O, PgShadowRecord> key) {
        super(child, key, PG_SHADOW);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PgCatalog.PG_CATALOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgShadow as(String alias) {
        return new PgShadow(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgShadow as(Name alias) {
        return new PgShadow(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PgShadow rename(String name) {
        return new PgShadow(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PgShadow rename(Name name) {
        return new PgShadow(name, null);
    }
}

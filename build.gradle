buildscript {
    ext {
        kotlinVersion = '1.2.51'
        springBootVersion = '2.0.3.RELEASE'
        dokkaVersion = '0.9.17'
        junitVersion = '5.2.0'
    }

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://dl.bintray.com/spekframework/spek-dev"
        }
    }

    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.dokka:dokka-gradle-plugin:${dokkaVersion}")
    }
}

plugins {
    id 'nu.studer.jooq' version '3.0.1'
    id 'org.flywaydb.flyway' version '5.1.4'
}

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.dokka'

    group = 'com.opidis.ca.unit-of-work'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = "1.8"
    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    repositories {
        mavenCentral()
        jcenter()
    }

// setup the test task for all projects
}

flyway {
    url = 'jdbc:postgresql://localhost/postgres'
    user = 'postgres'
    password = 'password'
    schemas = ['public']
}


dependencies {
    allprojects {
        compile("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
        implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
    }

    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}


dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}